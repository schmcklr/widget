{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\Documents\\\\Chat_Bot\\\\widget\\\\src\\\\pages\\\\Home.js\";\nimport { useEffect } from \"react\";\nimport { Widget, addResponseMessage } from \"react-chat-widget\";\nimport \"react-chat-widget/lib/styles.css\"; //Import socket client and Connect to RASA server\n\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5005\");\n\nconst Home = () => {\n  //Connecting with Server - positive response\n  socket.on('connect', function () {\n    console.log(\"Connected to Socket.io server\");\n  }); // Write any connection errors to the console\n\n  socket.on('connect_error', error => {\n    console.error(error);\n  }); // send messages from client to server\n\n  const handleNewUserMessage = newMessage => {\n    console.log(newMessage);\n    socket.emit(\"user_uttered\", newMessage);\n  }; //bot responses\n\n\n  const messages = document.getElementById('messages');\n  form.addEventListener('submit', function (e) {\n    e.preventDefault();\n    const msg = messageInput.value;\n\n    if (msg) {\n      socket.emit('user_uttered', {\n        \"message\": msg\n      });\n      messageInput.value = '';\n      appendMessage(msg, \"sent\");\n    }\n  });\n\n  function appendMessage(msg, type) {\n    const item = document.createElement('div');\n    item.textContent = msg;\n    item.classList.add(\"message\");\n    item.classList.add(`message_${type}`);\n    messages.appendChild(item);\n  }\n\n  socket.on('bot_uttered', function (response) {\n    console.log(\"Bot uttered:\", response);\n    /*if (response.text) {\r\n        appendMessage(response.text, \"received\");\r\n    }*/\n  });\n  /*    //messages from bot to frontend\r\n      socket.on(\"bot_uttered\", (message) => {\r\n          addResponseMessage(message);\r\n      });\r\n  \r\n      //new Message effect on icon\r\n      useEffect(() => {\r\n      addResponseMessage(\"Hey ich bin Liefy der Lieferbot. Kann ich dir weiterhelfen?\");\r\n      }, []);\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center p-5 display-1\",\n        children: \"Liefy der Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"\",\n        children: \"Wie funktioniert Liefy?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci aliquam blanditiis cum debitis facilis ipsum magnam praesentium qui quo ratione soluta tempora ullam, unde vero voluptatibus. Alias enim placeat quisquam.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Widget, {\n      handleNewUserMessage: handleNewUserMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Kevin/Documents/Chat_Bot/widget/src/pages/Home.js"],"names":["useEffect","Widget","addResponseMessage","io","socket","Home","on","console","log","error","handleNewUserMessage","newMessage","emit","messages","document","getElementById","form","addEventListener","e","preventDefault","msg","messageInput","value","appendMessage","type","item","createElement","textContent","classList","add","appendChild","response"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,MAAR,EAAgBC,kBAAhB,QAAyC,mBAAzC;AACA,OAAO,kCAAP,C,CAEA;;AACA,SAAQC,EAAR,QAAiB,kBAAjB;;AACA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;;AAGA,MAAME,IAAI,GAAG,MAAM;AAEf;AACAD,EAAAA,MAAM,CAACE,EAAP,CAAU,SAAV,EAAqB,YAAY;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACH,GAFD,EAHe,CAOf;;AACAJ,EAAAA,MAAM,CAACE,EAAP,CAAU,eAAV,EAA4BG,KAAD,IAAW;AAClCF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACH,GAFD,EARe,CAYf;;AACA,QAAMC,oBAAoB,GAAIC,UAAD,IAAgB;AACzCJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACAP,IAAAA,MAAM,CAACQ,IAAP,CAAY,cAAZ,EAA4BD,UAA5B;AACH,GAHD,CAbe,CAmBf;;;AACA,QAAME,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAjB;AAEAC,EAAAA,IAAI,CAACC,gBAAL,CAAsB,QAAtB,EAAgC,UAAUC,CAAV,EAAa;AAC7CA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAGC,YAAY,CAACC,KAAzB;;AACA,QAAIF,GAAJ,EAAS;AACLhB,MAAAA,MAAM,CAACQ,IAAP,CAAY,cAAZ,EAA4B;AACxB,mBAAWQ;AADa,OAA5B;AAGAC,MAAAA,YAAY,CAACC,KAAb,GAAqB,EAArB;AAEAC,MAAAA,aAAa,CAACH,GAAD,EAAM,MAAN,CAAb;AACH;AACJ,GAXG;;AAaA,WAASG,aAAT,CAAuBH,GAAvB,EAA4BI,IAA5B,EAAkC;AAC9B,UAAMC,IAAI,GAAGX,QAAQ,CAACY,aAAT,CAAuB,KAAvB,CAAb;AACAD,IAAAA,IAAI,CAACE,WAAL,GAAmBP,GAAnB;AACAK,IAAAA,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAmB,SAAnB;AACAJ,IAAAA,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAoB,WAAUL,IAAK,EAAnC;AACAX,IAAAA,QAAQ,CAACiB,WAAT,CAAqBL,IAArB;AACH;;AAEDrB,EAAAA,MAAM,CAACE,EAAP,CAAU,aAAV,EAAyB,UAAUyB,QAAV,EAAoB;AAC7CxB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BuB,QAA5B;AACA;AACJ;AACA;AACK,GALD;AAUJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGI,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAI,QAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,MAAD;AAAQ,MAAA,oBAAoB,EAAErB;AAA9B;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAjFD;;KAAML,I;AAkFN,eAAeA,IAAf","sourcesContent":["import {useEffect} from \"react\";\r\nimport {Widget, addResponseMessage} from \"react-chat-widget\";\r\nimport \"react-chat-widget/lib/styles.css\";\r\n\r\n//Import socket client and Connect to RASA server\r\nimport {io} from \"socket.io-client\";\r\nconst socket = io(\"http://localhost:5005\");\r\n\r\n\r\nconst Home = () => {\r\n\r\n    //Connecting with Server - positive response\r\n    socket.on('connect', function () {\r\n        console.log(\"Connected to Socket.io server\");\r\n    });\r\n\r\n    // Write any connection errors to the console\r\n    socket.on('connect_error', (error) => {\r\n        console.error(error);\r\n    });\r\n\r\n    // send messages from client to server\r\n    const handleNewUserMessage = (newMessage) => {\r\n        console.log(newMessage);\r\n        socket.emit(\"user_uttered\", newMessage);\r\n    };\r\n\r\n\r\n    //bot responses\r\n    const messages = document.getElementById('messages');\r\n\r\n    form.addEventListener('submit', function (e) {\r\n    e.preventDefault();\r\n    const msg = messageInput.value;\r\n    if (msg) {\r\n        socket.emit('user_uttered', {\r\n            \"message\": msg,\r\n        });\r\n        messageInput.value = '';\r\n\r\n        appendMessage(msg, \"sent\");\r\n    }\r\n});\r\n\r\n    function appendMessage(msg, type) {\r\n        const item = document.createElement('div');\r\n        item.textContent = msg;\r\n        item.classList.add(\"message\");\r\n        item.classList.add(`message_${type}`);\r\n        messages.appendChild(item);\r\n    }\r\n\r\n    socket.on('bot_uttered', function (response) {\r\n    console.log(\"Bot uttered:\", response);\r\n    /*if (response.text) {\r\n        appendMessage(response.text, \"received\");\r\n    }*/\r\n    });\r\n\r\n\r\n\r\n\r\n/*    //messages from bot to frontend\r\n    socket.on(\"bot_uttered\", (message) => {\r\n        addResponseMessage(message);\r\n    });\r\n\r\n    //new Message effect on icon\r\n    useEffect(() => {\r\n    addResponseMessage(\"Hey ich bin Liefy der Lieferbot. Kann ich dir weiterhelfen?\");\r\n    }, []);\r\n*/\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <h1 className=\"text-center p-5 display-1\">Liefy der Chatbot</h1>\r\n                <hr/>\r\n                <br/>\r\n                <h2 className=\"\">Wie funktioniert Liefy?</h2>\r\n                <hr/>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci aliquam blanditiis cum debitis\r\n                    facilis ipsum magnam praesentium qui quo ratione soluta tempora ullam, unde vero voluptatibus. Alias\r\n                    enim placeat quisquam.</p>\r\n\r\n            </div>\r\n            <Widget handleNewUserMessage={handleNewUserMessage}/>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}