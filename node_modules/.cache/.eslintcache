[{"/Users/normanschmickler/Documents/GitHub/widget/src/index.js":"1","/Users/normanschmickler/Documents/GitHub/widget/src/reportWebVitals.js":"2","/Users/normanschmickler/Documents/GitHub/widget/src/App.js":"3","/Users/normanschmickler/Documents/GitHub/widget/src/pages/Contact.js":"4","/Users/normanschmickler/Documents/GitHub/widget/src/pages/About.js":"5","/Users/normanschmickler/Documents/GitHub/widget/src/pages/Home/Home.js":"6","/Users/normanschmickler/Documents/GitHub/widget/src/customComponents/CustomImage.js":"7","/Users/normanschmickler/Documents/GitHub/widget/src/customComponents/CustomCardGroup.js":"8","/Users/normanschmickler/Documents/GitHub/widget/src/customComponents/CustomCarousel.js":"9","/Users/normanschmickler/Documents/GitHub/widget/src/customComponents/CustomCard.js":"10"},{"size":500,"mtime":1649948344625,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1649948344626,"results":"13","hashOfConfig":"12"},{"size":1183,"mtime":1649948344625,"results":"14","hashOfConfig":"12"},{"size":497,"mtime":1649948344625,"results":"15","hashOfConfig":"12"},{"size":511,"mtime":1649948344625,"results":"16","hashOfConfig":"12"},{"size":5873,"mtime":1649948344625,"results":"17","hashOfConfig":"12"},{"size":227,"mtime":1649948344625,"results":"18","hashOfConfig":"12"},{"size":2532,"mtime":1649948344625,"results":"19","hashOfConfig":"12"},{"size":2941,"mtime":1649948542606,"results":"20","hashOfConfig":"12"},{"size":749,"mtime":1649948344625,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1omxihm",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/normanschmickler/Documents/GitHub/widget/src/index.js",[],[],["55","56"],"/Users/normanschmickler/Documents/GitHub/widget/src/reportWebVitals.js",[],[],"/Users/normanschmickler/Documents/GitHub/widget/src/App.js",["57","58","59","60","61","62"],[],"import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Routes\n} from \"react-router-dom\";\n\nimport Home from \"./pages/Home/Home\";\nimport About from \"./pages/About\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Contact from \"./pages/Contact\";\nimport {Container, Navbar} from \"react-bootstrap\";\n\n\n\nconst Nav = () => <ul className=\"nav justify-content-center\">\n    <li className=\"nav-item\">\n        <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n    </li>\n    <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"/about\">About</a>\n    </li>\n    <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"/contact\">Contact</a>\n    </li>\n    <li className=\"nav-item\">\n        <a className=\"nav-link disabled\">Team</a>\n    </li>\n</ul>\n\n\n\n\nfunction App() {\n  return (\n      <Router>\n            <Nav />\n            <Routes>\n                <Route exact path=\"/\" element={<Home />}/>\n                <Route exact path=\"/about\" element={<About />}/>\n                <Route exact path=\"/contact\" element={<Contact />}/>\n            </Routes>\n        </Router>\n\n  );\n}\nexport default App;\n","/Users/normanschmickler/Documents/GitHub/widget/src/pages/Contact.js",[],[],"/Users/normanschmickler/Documents/GitHub/widget/src/pages/About.js",[],[],"/Users/normanschmickler/Documents/GitHub/widget/src/pages/Home/Home.js",["63","64","65","66","67"],[],"import {Component, useEffect} from \"react\";\nimport {\n    Widget,\n    addResponseMessage,\n    setQuickButtons,\n    addUserMessage,\n    renderCustomComponent,\n    handleQuickButtonClicked\n} from \"react-chat-widget\";\nimport \"react-chat-widget/lib/styles.css\";\nimport \"./Home.css\"\nimport \"./styles.scss\";\nimport * as PropTypes from \"prop-types\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import custom components\nimport CustomCardGroup from \"../../customComponents/CustomCardGroup\";\nimport CustomCarousel from \"../../customComponents/CustomCarousel\";\nimport CustomCard from \"../../customComponents/CustomCard\";\nimport CustomImage from \"../../customComponents/CustomImage\";\n\n\n//TODO: Restructure Code maybe in seperate files and not all function in the home.js (Norman)\n//TODO: After the button clicked and send to BE no responses are coming -> fix\n\nconst Home = () => {\n\n    //******************************************************************\n    //Rest Api connection in use\n    //******************************************************************\n\n    // Used for submitting messages and getting responses\n    function handleMessagesAndResponses(newMessage) {\n\n        //********************POST*********************\n        // POST request using fetch() (currently used for sending/receiving messages)\n        fetch(\"http://localhost:5005/webhooks/rest/webhook\", {\n\n            // Adding method type\n            method: \"POST\",\n\n            // Adding body or contents to send\n            body: JSON.stringify({\n                sender: \"test_user\",\n                //message which was typed in via keyboard\n                message: newMessage\n            }),\n\n            // Adding headers to the request\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n\n            // Converting to JSON\n            .then(response => response.json()\n            )\n\n            // Displaying results in chat widget\n\n            // Display text in widget\n            //.then(json => addResponseMessage(json[0].text))\n            // Used for texting: display text in console\n            //.then(json => console.log(json))\n            .then(function (json) {\n                let jsonData\n                jsonData = json\n                botResponse(jsonData)\n                //TODO: Remove development functions\n                console.log(jsonData)\n            });\n    }\n\n\n    // handle user Message typed in via keyboard\n    const handleNewUserMessage = (newMessage) => {\n        handleMessagesAndResponses(newMessage)\n\n        //TODO: Remove testing functions\n        renderCustomComponent(CustomCard, {text: newMessage})\n        renderCustomComponent(CustomCardGroup, {text: newMessage})\n        //renderCustomComponent(Custom_Card2, {text: newMessage})\n        //renderCustomComponent(CustomCarousel, {text: newMessage})\n    }\n\n\n    // function which checks message type of Bot Response\n    function botResponse(jsonData) {\n        let i;\n        for (i = 0; i < jsonData.length; i++) {\n\n            //buttons\n            if (jsonData[i].hasOwnProperty('buttons')) {\n                addResponseMessage(jsonData[i].text)\n                console.log(jsonData[i].buttons)\n                handleButtons(jsonData[i].buttons)\n            }\n            //pictures\n            else if (jsonData[i].hasOwnProperty(\"image\")) {\n                handleImages(jsonData[i].image)\n            }\n\n                //TODO: Handle Pictures and Text separately, searching for an identifier\n            //text\n            else {\n                console.log(jsonData[i].text)\n                addResponseMessage(jsonData[i].text)\n            }\n        }\n    }\n\n    // handle bot response button\n    function handleButtons(jsonData) {\n\n        let i;\n        let buttons = [];\n\n        for (i = 0; i < jsonData.length; i++) {\n\n            console.log(jsonData[i].title)\n            buttons[i] = {\n                label: jsonData[i].title,\n                value: jsonData[i].title,\n            };\n        }\n        setQuickButtons(buttons);\n    }\n\n    // function that is triggerd if a button is clicked\n    const handleQuickButtonClicked = (value) => {\n        addUserMessage(value)\n        console.log(value)\n        handleMessagesAndResponses(value)\n\n        //TODO: removes all buttons, in some cases that should not be the case because mor options can be selected, how can we identify?\n        setQuickButtons([]);\n    }\n\n    // handle bot response Images\n    function handleImages(jsonData) {\n        console.log(jsonData)\n        renderCustomComponent(CustomImage, {src: jsonData})\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <h1 className=\"text-center p-5 display-1\">Liefy der Chatbot</h1>\n                <hr/>\n                <br/>\n                <h2 className=\"\">Wie funktioniert Liefy?</h2>\n                <hr/>\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci aliquam blanditiis cum debitis\n                    facilis ipsum magnam praesentium qui quo ratione soluta tempora ullam, unde vero voluptatibus. Alias\n                    enim placeat quisquam.</p>\n\n            </div>\n            <div className=\"App1\">\n                <Widget handleNewUserMessage={handleNewUserMessage}\n                        handleQuickButtonClicked={handleQuickButtonClicked}\n                        initPayload={\"/get_started\"}\n                        customData={{\"language\": \"de\"}}\n                        params={{'storage': 'session'}}\n                        title={\"Liefy der Restaurant Bot\"}\n                        subtitle={\"\"}\n                        showTimeStamp={\"yes\"}\n                        emojis={'YES'}\n                    //resizable={'NO'}\n                />\n            </div>\n        </div>\n    );\n};\n\n\nexport default Home;","/Users/normanschmickler/Documents/GitHub/widget/src/customComponents/CustomImage.js",[],[],"/Users/normanschmickler/Documents/GitHub/widget/src/customComponents/CustomCardGroup.js",[],[],"/Users/normanschmickler/Documents/GitHub/widget/src/customComponents/CustomCarousel.js",[],[],"/Users/normanschmickler/Documents/GitHub/widget/src/customComponents/CustomCard.js",[],[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"72","severity":1,"message":"76","line":5,"column":3,"nodeType":"74","messageId":"75","endLine":5,"endColumn":9},{"ruleId":"72","severity":1,"message":"77","line":7,"column":3,"nodeType":"74","messageId":"75","endLine":7,"endColumn":7},{"ruleId":"72","severity":1,"message":"78","line":15,"column":9,"nodeType":"74","messageId":"75","endLine":15,"endColumn":18},{"ruleId":"72","severity":1,"message":"79","line":15,"column":20,"nodeType":"74","messageId":"75","endLine":15,"endColumn":26},{"ruleId":"80","severity":1,"message":"81","line":30,"column":9,"nodeType":"82","endLine":30,"endColumn":42},{"ruleId":"72","severity":1,"message":"83","line":1,"column":9,"nodeType":"74","messageId":"75","endLine":1,"endColumn":18},{"ruleId":"72","severity":1,"message":"84","line":1,"column":20,"nodeType":"74","messageId":"75","endLine":1,"endColumn":29},{"ruleId":"72","severity":1,"message":"85","line":8,"column":5,"nodeType":"74","messageId":"75","endLine":8,"endColumn":29},{"ruleId":"72","severity":1,"message":"86","line":13,"column":13,"nodeType":"74","messageId":"75","endLine":13,"endColumn":22},{"ruleId":"72","severity":1,"message":"87","line":17,"column":8,"nodeType":"74","messageId":"75","endLine":17,"endColumn":22},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","'Container' is defined but never used.","'Navbar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'useEffect' is defined but never used.","'handleQuickButtonClicked' is defined but never used.","'PropTypes' is defined but never used.","'CustomCarousel' is defined but never used.","no-global-assign","no-unsafe-negation"]